name: Build and Publish Python Bindings

on:
  # Requires someone to trigger this build script via github workflows
  # It is required that the codebase is audited by contributors
  # before triggering to reduce the likelihood of supply chain attacks
  workflow_dispatch:

defaults:
  run:
    working-directory: .

env:
  RUSTFLAGS: -C link-arg=-s

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.7
          architecture: x64
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy

      - name: Build wheels - x86_64
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --features python-bindings
      - name: Install built wheel - x86_64
        run: |
          pip install ezkl_lib --no-index --find-links dist --force-reinstall
          python -c "import ezkl_lib"

      - name: Build wheels - universal2
        uses: PyO3/maturin-action@v1
        with:
          target: universal2-apple-darwin
          args: --release --out dist --features python-bindings
      - name: Install built wheel - universal2
        run: |
          pip install ezkl_lib --no-index --find-links dist --force-reinstall
          python -c "import ezkl_lib"

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.7
          architecture: ${{ matrix.target }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --features python-bindings
      - name: Install built wheel
        run: |
          pip install ezkl_lib --no-index --find-links dist --force-reinstall
          python -c "import ezkl_lib"

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.7
        architecture: x64

    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release --out dist --features python-bindings

    - name: Install built wheel
      if: matrix.target == 'x86_64'
      run: |
        pip install ezkl_lib --no-index --find-links dist --force-reinstall
        python -c "import ezkl_lib"

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  linux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [aarch64, armv7]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.7

    - name: Install cross-compilation tools for aarch64
      if: matrix.target == 'aarch64'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc make gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu libc6-dev-arm64-cross

    - name: Install cross-compilation tools for ARMv7
      if: matrix.target == 'armv7'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc make gcc-arm-linux-gnueabihf binutils-arm-linux-gnueabihf libc6-dev-armhf-cross

    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release --out dist --features python-bindings

    - uses: uraimo/run-on-arch-action@v2.5.0
      name: Install built wheel
      with:
        arch: ${{ matrix.target }}
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        install: |
          apt-get update
          apt-get install -y --no-install-recommends python3 python3-pip
          pip3 install -U pip
        run: |
          pip3 install ezkl_lib --no-index --find-links dist/ --force-reinstall
          python3 -c "import ezkl_lib"

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  musllinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.7
        architecture: x64

    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: musllinux_1_2
        args: --release --out dist --features python-bindings

    - name: Install built wheel
      if: matrix.target == 'x86_64-unknown-linux-musl'
      uses: addnab/docker-run-action@v3
      with:
        image: alpine:latest
        options: -v ${{ github.workspace }}:/io -w /io
        run: |
          apk add py3-pip
          pip3 install -U pip
          pip3 install ezkl_lib --no-index --find-links /io/dist/ --force-reinstall
          python3 -c "import ezkl_lib"

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  musllinux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - target: aarch64-unknown-linux-musl
            arch: aarch64
          - target: armv7-unknown-linux-musleabihf
            arch: armv7
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: 3.7

    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.platform.target }}
        manylinux: musllinux_1_2
        args: --release --out dist --features python-bindings

    - uses: uraimo/run-on-arch-action@v2.5.0
      name: Install built wheel
      with:
        arch: ${{ matrix.platform.arch }}
        distro: alpine_latest
        githubToken: ${{ github.token }}
        install: |
          apk add py3-pip
          pip3 install -U pip
        run: |
          pip3 install ezkl_lib --no-index --find-links dist/ --force-reinstall
          python3 -c "import ezkl_lib"

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  pypi-publish:
    name: Uploads release to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ macos, windows, linux, linux-cross, musllinux, musllinux-cross ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

