name: Rust

on:
  push:
    branches: ["main"]
    paths-ignore:
      - "README.md"
  pull_request:
    branches: ["main"]
    paths-ignore:
      - "README.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - name: Build
        run: cargo build --verbose

  build-wasm:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - uses: mwilliamson/setup-wasmtime-action@v2
        with:
          wasmtime-version: "3.0.1"
      - name: Install wasm32-wasi
        run: rustup target add wasm32-wasi
      - name: Build wasm
        run: cargo build --release --bin ezkl --target=wasm32-wasi
      - name: Run help
        run: wasmtime run './target/wasm32-wasi/release/ezkl.wasm' -- --help

  benchmarks:
    runs-on: self-hosted
    needs: [build, build-wasm, library-tests, docs]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - name: Bench accum matmul
        run: cargo bench --verbose --bench accum_matmul
      - name: Bench accum matmul relu
        run: cargo bench --verbose --bench accum_matmul_relu
      - name: Bench relu
        run: cargo bench --verbose --bench relu
      - name: Bench accum dot
        run: cargo bench --verbose --bench accum_dot
      - name: Bench accum conv
        run: cargo bench --verbose --bench accum_conv
      - name: Bench accum sumpool
        run: cargo bench --verbose --bench accum_sumpool
      - name: Bench pairwise add
        run: cargo bench --verbose --bench pairwise_add
      - name: Bench accum sum
        run: cargo bench --verbose --bench accum_sum
      - name: Bench pairwise pow
        run: cargo bench --verbose --bench pairwise_pow
      - name: Bench accum pack
        run: cargo bench --verbose --bench accum_pack

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - name: Docs
        run: cargo doc --verbose

  library-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - name: Doc tests
        run: cargo test --doc --verbose
      - name: Library tests
        run: cargo test --lib --verbose

  wasm32-tests:
    runs-on: ubuntu-latest
    needs: [build, build-wasm, library-tests, docs]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - uses: jetli/wasm-pack-action@v0.4.0
      - uses: mwilliamson/setup-wasmtime-action@v2
        with:
          wasmtime-version: "3.0.1"
      - uses: browser-actions/setup-chrome@v1
      - uses: nanasess/setup-chromedriver@v2
      - name: Install wasm32-unknown-unknown
        run: rustup target add wasm32-unknown-unknown
      - name: Install wasm runner
        run: cargo install wasm-server-runner
      - name: Add rust-src
        run: rustup component add rust-src --toolchain nightly-2022-11-03-x86_64-unknown-linux-gnu
      - name: Run wasm verifier tests
        run: wasm-pack test --chrome --headless -- -Z build-std="panic_abort,std"

  forward-pass-tests:
    runs-on: ubuntu-latest-16-cores
    needs: [build, build-wasm, library-tests, docs]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - name: Forward Pass
        run: cargo test --release --verbose tests::forward_pass_

  render-circuit:
    runs-on: ubuntu-latest-32-cores
    needs: [build, build-wasm, library-tests, docs]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - uses: mwilliamson/setup-wasmtime-action@v2
        with:
          wasmtime-version: "3.0.1"
      - name: Circuit Render
        run: cargo test --release --features render --verbose tests::render_circuit_

  tutorial:
    runs-on: ubuntu-latest
    needs: [build, build-wasm, library-tests, docs]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - name: Circuit Render
        run: cargo test --release --verbose tests::tutorial_

  mock-proving-tests:
    runs-on: ubuntu-latest-32-cores
    needs: [build, build-wasm, library-tests, docs]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - name: Mock proving tests (public outputs)
        run: cargo test --release --verbose tests::mock_public_outputs_ -- --test-threads 32
      - name: Mock proving tests (public and packed outputs)
        run: cargo test --release --verbose packed_tests::mock_packed_outputs_ -- --test-threads 32
      - name: Mock proving tests (public inputs)
        run: cargo test --release --verbose tests::mock_public_inputs_ -- --test-threads 32
      - name: Mock proving tests (public params)
        run: cargo test --release --verbose tests::mock_public_params_ -- --test-threads 32
      - name: Mock 'everything' tests (public and packed outputs, public inputs)
        run: cargo test --release --verbose packed_tests::mock_everything_ -- --test-threads 32

  mock-proving-tests-wasi:
    runs-on: ubuntu-latest-32-cores
    needs: [build, build-wasm, library-tests, docs]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - uses: mwilliamson/setup-wasmtime-action@v2
        with:
          wasmtime-version: "3.0.1"
      - name: Install wasm32-wasi
        run: rustup target add wasm32-wasi
      - name: Mock proving tests (WASI) (public outputs)
        run: cargo test --release --verbose tests_wasi::mock_public_outputs_ -- --test-threads 32
      - name: Mock proving tests (WASI) (public and packed outputs)
        run: cargo test --release --verbose packed_tests_wasi::mock_packed_outputs_ -- --test-threads 32
      - name: Mock proving tests (WASI) (public inputs)
        run: cargo test --release --verbose tests_wasi::mock_public_inputs_ -- --test-threads 32
      - name: Mock proving tests (WASI) (public params)
        run: cargo test --release --verbose tests_wasi::mock_public_params_ -- --test-threads 32
      - name: Mock 'everything' tests (WASI) (public and packed outputs, public inputs)
        run: cargo test --release --verbose packed_tests_wasi::mock_everything_ -- --test-threads 32

  prove-and-verify-evm-tests:
    runs-on: ubuntu-latest-16-cores
    needs:
      [
        build,
        build-wasm,
        library-tests,
        mock-proving-tests,
        mock-proving-tests-wasi,
      ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - name: Install solc
        run: (hash svm 2>/dev/null || cargo install svm-rs) && svm install 0.8.17 && solc --version
      - name: Install Anvil
        run: cargo install --git https://github.com/foundry-rs/foundry --profile local --locked foundry-cli anvil
      - name: KZG prove and verify tests (EVM)
        run: cargo test --release --verbose tests_evm -- --test-threads 4

  prove-and-verify-tests:
    runs-on: ubuntu-latest-32-cores
    needs:
      [
        build,
        build-wasm,
        library-tests,
        mock-proving-tests,
        mock-proving-tests-wasi,
      ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - name: KZG prove and verify tests
        run: cargo test --release --verbose tests::kzg_prove_and_verify_ -- --test-threads 8

  prove-and-verify-aggr-tests:
    runs-on: self-hosted
    needs:
      [
        build,
        build-wasm,
        library-tests,
        mock-proving-tests,
        mock-proving-tests-wasi,
      ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - name: KZG prove and verify aggr tests
        run: cargo test --release --verbose tests_aggr::kzg_aggr_prove_and_verify_ -- --test-threads 8

  prove-and-verify-aggr-evm-tests:
    runs-on: self-hosted
    needs:
      [
        build,
        build-wasm,
        library-tests,
        mock-proving-tests,
        mock-proving-tests-wasi,
      ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - name: Install solc
        run: (hash svm 2>/dev/null || cargo install svm-rs) && svm install 0.8.17 && solc --version
      - name: KZG prove and verify aggr tests
        run: cargo test --release --verbose tests_evm::kzg_evm_aggr_prove_and_verify_ -- --include-ignored --test-threads 8

  examples:
    runs-on: ubuntu-latest-32-cores
    needs: [build, build-wasm, library-tests, docs]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - name: Download MNIST
        run: sh data.sh
      - name: Examples
        run: cargo test --release tests_examples

  neg-tests:
    runs-on: ubuntu-latest
    needs: [build, build-wasm, library-tests, docs]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - uses: mwilliamson/setup-wasmtime-action@v2
        with:
          wasmtime-version: "3.0.1"
      - name: Install wasm32-wasi
        run: rustup target add wasm32-wasi
      - name: Mock proving tests (should fail)
        run: cargo test neg_tests::neg_examples_
      - name: Mock proving tests (WASI) (should fail)
        run: cargo test neg_tests_wasi::neg_examples_

  python-tests:
    runs-on: ubuntu-latest
    needs: [build, build-wasm, library-tests, docs]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.7"
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-11-03
          override: true
          components: rustfmt, clippy
      - name: Install solc
        run: (hash svm 2>/dev/null || cargo install svm-rs) && svm install 0.8.17 && solc --version
      - name: Setup Virtual Env and Install python dependencies
        run: python -m venv .env; source .env/bin/activate; pip install -r requirements.txt;
      - name: Build python ezkl_lib
        run: source .env/bin/activate; maturin develop --features python-bindings
      - name: Run pytest
        run: source .env/bin/activate; pytest
